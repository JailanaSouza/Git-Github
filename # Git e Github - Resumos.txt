# Git e Github - Resumos

Aqui est√£o alguns comandos necess√°rios para o uso frequente do Git Bash. 


## üìùComandos 
| Comando| Uso | Exemplo |
| ----| ------ | --------|
|mkdir| Criar novos diret√≥rios no diret√≥rios local.| $ mkdir documentos. 
| git config|Configura a id. do usu√°rio, incluindo nome e e-mail, que ser√£o usados em cada commit.|$ git config --global user.name "Seu nome".
|git init| Cria um novo reposit√≥rio Git. Use esse comando para iniciar um novo projeto. |$ git init
|git add|Adiciona arquivos ao √≠ndice para serem inclu√≠dos no pr√≥ximo commit. Pode adicionar arquivos espec√≠ficos ou todos os arquivos modificados.|Esp: $ git add seu_arquivo. Mod: $ git add
| gitignore| Ignorar elementos que n√£o deseja salvar. √â uma ferramenta para manter seu reposit√≥rio limpo. |$ gitignore
| git clone| Cria uma c√≥pia exata de um reposit√≥rio existente. √ötil para obter o c√≥digo de um projeto j√° em andamento. |$ git clone <URL do seu projeto>
|git commit| Move os arquivos da √°rea de staging para o reposit√≥rio local. |$ git commit -m "Minha mensagem de commit"
|git log| Ele permite que voc√™ liste e filtre o hist√≥rico do projeto e pesquise altera√ß√µes espec√≠ficas - commit |$ git log
|git push| Envia as altera√ß√µes do reposit√≥rio local para o reposit√≥rio remoto (como o GitHub) |$ git push origin main
|git pull|Obt√©m as altera√ß√µes do reposit√≥rio remoto e mescla com o reposit√≥rio local.| $ git pull origin main
|git branch |Lista, cria ou exclui branches.|$ git merge minha_branch
| git status| √â utilizado para verificar o estado do seu diret√≥rio de trabalho e da √°rea de staging em reposit√≥rios Git. |$ git status
|          |  Exibe o status de forma resumida.|$ git status -s
||Mostra informa√ß√µes sobre o branch atual e o tracking mesmo no formato resumido.|$ git status -b
||Exibe o n√∫mero de entradas atualmente guardadas.|$ git status --show-stash
|| Fornece uma sa√≠da f√°cil de ser analisada por scripts. |$ git status --porcelain
||Exibe o status de forma detalhada.|$ git status --long
||Al√©m dos nomes dos arquivos modificados, mostra as altera√ß√µes que est√£o preparadas para serem commitadas. Se usado duas vezes (-v -v), exibe as mudan√ßas que ainda n√£o foram preparadas |$ git status -v
|||Mostra os arquivos n√£o rastreados. .|$ git status -u





```

```


## üìúRefer√™ncias 
- [Training Github](https://training.github.com/downloads/pt_PT/github-git-cheat-sheet.pdf)



